meta:
  id: numpy_type_lut
  title: A Simple File Format for NumPy Arrays
  application: numpy
  file-extension: npy
  license: Unlicense
  endian: le
  imports:
    - /common/ndarray_descriptor
  ks-opaque-types: true
doc: |
  a LUT mapping string type identifiers to types from `ndarray_descriptor`

params:
  - id: type_str
    type: str
types:
  v:
    params:
      - id: value
        type: u1
        enum: ndarray_descriptor::item_type
seq:
  - id: data
    doc: S<n> for n > 1 is currently out of scope
    type:
      switch-on: type_str
      cases:
        '"|u1"': v(ndarray_descriptor::item_type::u1)
        '"|i1"': v(ndarray_descriptor::item_type::s1)
        '"|f1"': v(ndarray_descriptor::item_type::f1)
        '"<S1"': v(ndarray_descriptor::item_type::s1) # char

        '"<u2"': v(ndarray_descriptor::item_type::u2le)
        '"<u4"': v(ndarray_descriptor::item_type::u4le)
        '"<u8"': v(ndarray_descriptor::item_type::u8le)
        '"<i2"': v(ndarray_descriptor::item_type::s2le)
        '"<i4"': v(ndarray_descriptor::item_type::s4le)
        '"<i8"': v(ndarray_descriptor::item_type::s8le)
        '"<f2"': v(ndarray_descriptor::item_type::f2le)
        '"<f4"': v(ndarray_descriptor::item_type::f4le)
        '"<f8"': v(ndarray_descriptor::item_type::f8le)
        '"<f10"': v(ndarray_descriptor::item_type::f10le)
        '"<f12"': v(ndarray_descriptor::item_type::f12le)
        '"<f16"': v(ndarray_descriptor::item_type::f16le)
        '"<f32"': v(ndarray_descriptor::item_type::f32le)

        '">u2"': v(ndarray_descriptor::item_type::u2be)
        '">u4"': v(ndarray_descriptor::item_type::u4be)
        '">u8"': v(ndarray_descriptor::item_type::u8be)
        '">i2"': v(ndarray_descriptor::item_type::s2be)
        '">i4"': v(ndarray_descriptor::item_type::s4be)
        '">i8"': v(ndarray_descriptor::item_type::s8be)
        '">f2"': v(ndarray_descriptor::item_type::f2be)
        '">f4"': v(ndarray_descriptor::item_type::f4be)
        '">f8"': v(ndarray_descriptor::item_type::f8be)
        '">f10"': v(ndarray_descriptor::item_type::f10be)
        '">f12"': v(ndarray_descriptor::item_type::f12be)
        '">f16"': v(ndarray_descriptor::item_type::f16be)
        '">f32"': v(ndarray_descriptor::item_type::f32be)

        # Machine endianness, assumming le, since it is the most sensible endiannes and the most common today
        # Is not generated by numpy, but is parsed well from tampered numpy files.
        '"|u2"': v(ndarray_descriptor::item_type::u2le)
        '"|u4"': v(ndarray_descriptor::item_type::u4le)
        '"|u8"': v(ndarray_descriptor::item_type::u8le)
        '"|i2"': v(ndarray_descriptor::item_type::s2le)
        '"|i4"': v(ndarray_descriptor::item_type::s4le)
        '"|i8"': v(ndarray_descriptor::item_type::s8le)
        '"|f2"': v(ndarray_descriptor::item_type::f2le)
        '"|f4"': v(ndarray_descriptor::item_type::f4le)
        '"|f8"': v(ndarray_descriptor::item_type::f8le)
        '"|f10"': v(ndarray_descriptor::item_type::f10le)
        '"|f12"': v(ndarray_descriptor::item_type::f12le)
        '"|f16"': v(ndarray_descriptor::item_type::f16le)
        '"|f32"': v(ndarray_descriptor::item_type::f32le)

        # the same, but using chars
        '"|B"': v(ndarray_descriptor::item_type::u1)
        '"|b"': v(ndarray_descriptor::item_type::s1)

        '"<H"': v(ndarray_descriptor::item_type::u2le)
        '"<L"': v(ndarray_descriptor::item_type::u4le)
        '"<Q"': v(ndarray_descriptor::item_type::u8le)
        '"<h"': v(ndarray_descriptor::item_type::s2le)
        '"<l"': v(ndarray_descriptor::item_type::s4le)
        '"<q"': v(ndarray_descriptor::item_type::s8le)
        '"<e"': v(ndarray_descriptor::item_type::f2le)
        '"<f"': v(ndarray_descriptor::item_type::f4le)
        '"<d"': v(ndarray_descriptor::item_type::f8le)
        '"<g"': v(ndarray_descriptor::item_type::f12le)  # on 64-bit systems f16le

        '">H"': v(ndarray_descriptor::item_type::u2be)
        '">L"': v(ndarray_descriptor::item_type::u4be)
        '">Q"': v(ndarray_descriptor::item_type::u8be)
        '">h"': v(ndarray_descriptor::item_type::s2be)
        '">l"': v(ndarray_descriptor::item_type::s4be)
        '">q"': v(ndarray_descriptor::item_type::s8be)
        '">e"': v(ndarray_descriptor::item_type::f2be)
        '">f"': v(ndarray_descriptor::item_type::f4be)
        '">d"': v(ndarray_descriptor::item_type::f8be)
        '">g"': v(ndarray_descriptor::item_type::f12be)

        '"|H"': v(ndarray_descriptor::item_type::u2le)
        '"|L"': v(ndarray_descriptor::item_type::u4le)
        '"|Q"': v(ndarray_descriptor::item_type::u8le)
        '"|h"': v(ndarray_descriptor::item_type::s2le)
        '"|l"': v(ndarray_descriptor::item_type::s4le)
        '"|q"': v(ndarray_descriptor::item_type::s8le)
        '"|e"': v(ndarray_descriptor::item_type::f2le)
        '"|f"': v(ndarray_descriptor::item_type::f4le)
        '"|d"': v(ndarray_descriptor::item_type::f8le)
        '"|g"': v(ndarray_descriptor::item_type::f12le) # on 64-bit systems f16le
